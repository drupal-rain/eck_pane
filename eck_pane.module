<?php

/**
 * Implements hook_ctools_plugin_directory().
 */
function eck_pane_ctools_plugin_directory($owner, $plugin_type) {
  $owners = array('ctools');
  if (in_array($owner, $owners)) {
    return 'plugins/' . $plugin_type;
  }
}

/**
 * Load entity by subtype name.
 */
function eck_pane_load_entity($subtype) {
  list($entity_type, $id) = explode(':', $subtype);
  return entity_load_single($entity_type, $id);
}

/**
 * Simple replacement for eck__entity__form_submit() to not set status message.
 *
 * @see eck__entity__form_submit()
 */
function eck_pane_eck__entity__form_submit($form, &$form_state) {
  $entity = $form_state['values']['entity'];

  field_attach_submit($entity->entityType(), $entity, $form, $form_state);

  $entity_type = EntityType::loadByName($entity->entityType());

  // Let the behaviors modify the entity.
  // @todo Why do we need to pass form information to the save behavior.
  // This is related to eck_revisions. Is there a danger that the current
  // eck_revision logic will not apply when entities are manipulated from
  // code and not the UI?
  eck_property_behavior_invoke_plugin($entity_type, 'entity_save', array('entity' => $entity, 'form' => $form, 'form_state' => $form_state));

  $entity->save();
}
